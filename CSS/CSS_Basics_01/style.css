/* CSS */
    /* CSS stands for Cascading Style Sheets */
    /* Like HTML, CSS is not a programming language. It's not a markup language either. */
    /* Cascading Style Sheets (CSS) is a stylesheet language used to describe the presentation of a document written in HTML or XML (including XML dialects such as SVG, MathML or XHTML). */
    /* CSS describes how elements should be rendered on screen, on paper, in speech, or on other media. */

        p {
            color: red;
        }
    /* This whole structure is called a ruleset. (The term ruleset is often referred to as just rule.) */

    /* Note the names of the individual parts: */
        /* 1.) Selector */
            /* This is the HTML element name at the start of the ruleset. It defines the element(s) to be styled (in this example, <p> elements). To style a different element, change the selector. */
        
        /* 2.) Declaration */
            /* This is a single rule like color: red;. It specifies which of the element's properties you want to style. */

        /* 3.) Properties */
            /* These are ways in which you can style an HTML element. (In this example, color is a property of the <p> elements.) In CSS, you choose which properties you want to affect in the rule. */
            /* Like, font size, font weight and so on */

        /* 4.) Property value */
            /* To the right of the property—after the colon—there is the property value. This chooses one out of many possible appearances for a given property. (For example, there are many color values in addition to red.) */

    /* Note the other important parts of the syntax: */

        /* Apart from the selector, each ruleset must be wrapped in curly braces. ({}) */
        /* Within each declaration, you must use a colon (:) to separate the property from its value or values. */
        /* Within each ruleset, you must use a semicolon (;) to separate each declaration from the next one. */

    /* To modify multiple property values in one ruleset, write them separated by semicolons, like this: */
        p{
            width: fit-content;
            border: 1px solid black;
            background-color: aquamarine;
        }
    
    /* You can also select multiple elements and apply a single ruleset to all of them. Separate multiple selectors by commas. For example: */
        h1,
        span{
            color: red;
            background-color: aquamarine;
        }

/* Selectors */
    /* This is the HTML element name at the start of the ruleset. It defines the element(s) to be styled. */
    /* CSS selectors are used to "find" (or select) the HTML elements you want to style. */

    /* Types of Selectors */
        /* 1.) Simple selectors (select elements based on name, id, class) */
        /* 2.) Combinator selectors (select elements based on a specific relationship between them) */
        /* 3.) Pseudo-class selectors (select elements based on a certain state) */
        /* 4.) Pseudo-elements selectors (select and style a part of an element) */
        /* 5.) Attribute selectors (select elements based on an attribute or attribute value) */

        /* 1.) Simple selectors */
            /* Select elements based on name, id, class */
            
            /* Types of Simple Selector */
                /* a.) Elements or Type or Tag */
                /* b.) Class Selector */
                /* c.) ID Seelector */

                /* a.) Elements or Type or Tag */
                    /* The element selector selects HTML elements based on the element name. */

                    h2 {
                        color: brown;
                        font-style: bold;
                    }

                /* b.) Class Selector */
                    /* The class selector selects HTML elements with a specific class attribute. */
                    /* To select elements with a specific class, write a period (.) character, followed by the class name. */

                    .sel{
                        background-color: aqua;
                        color: rgb(102, 60, 8);
                        border: 1px solid red;
                        font-size: medium;
                        font-style: oblique;
                    }

                    .sele{
                        background-color: yellowgreen;
                        color: red;
                        border: 2px solid black;
                        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
                    }
                
                    /* We can also specify that only specific HTML elements should be affected by a class. */
                        h3.sel {
                            text-align: center;
                            font-weight: 700px;
                        }
                    
                    /* Note: A class name cannot start with a number! */

                /* c.) ID Seelector */
                    /* The id selector uses the id attribute of an HTML element to select a specific element. */
                    /* The id of an element is unique within a page, so the id selector is used to select one unique element!
                    /* To select an element with a specific id, write a hash (#) character, followed by the id of the element. */

                    #class{
                        font-size: large;
                        color: rgb(255, 255, 255);
                        background-color: black;
                    }

                    #specific{
                        font-size: larger;
                        font-family: 'Times New Roman', Times, serif;
                        background-color: aquamarine;
                        color: black;
                    }
                    
                    /* Note: A id name cannot start with a number! */

        /* 2.) Combinator selectors (select elements based on a specific relationship between them) */
            /* A combinator is something that explains the relationship between the selectors. */
            /* A CSS selector can contain more than one simple selector. Between the simple selectors, we can include a combinator. */

            /* There are four different combinators in CSS: */
                /* a.) descendant selector (space) */
                /* b.) child selector (>) */
                /* c.) adjacent sibling selector (+) */
                /* d.) general sibling selector (~) */

                /* a.) descendant selector (space) */
                    /* The descendant selector matches all elements that are descendants of a specified element. */

                    div p {
                        background-color: yellow;
                    }

                    div section {
                        background-color: yellowgreen; /* not Child but Descendant */
                    }

                    li {
                        list-style-type: circle;
                    }

                    li li {
                        list-style-type: disc;
                    }

                /* b.) child selector (>) */
                    /* The child selector selects all elements that are the children of a specified element. */

                    div > p {
                        color: blue;
                    }

                /* c.) adjacent sibling selector (+) */
                    /* The adjacent sibling selector is represented by the plus sign (+) and is used to select an element that is directly after another specific element. */
                    /* Sibling elements must have the same parent element, and "adjacent" means "immediately following". */

                    div + p {
                        background-color: blue;
                        font-size: larger;
                    }
                
                /* d.) general sibling selector (~) */
                    /*  */

